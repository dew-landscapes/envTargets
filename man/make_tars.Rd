% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_tars.R
\name{make_tars}
\alias{make_tars}
\title{Make tars}
\usage{
make_tars(
  settings = "settings/setup.yaml",
  store_base = fs::path("..", "..", "out"),
  project_base = here::here(),
  target_pattern = "\\\\d{3}_.*\\\\.R$",
  local = TRUE,
  save_yaml = local,
  list_names = c("extent", "grain")
)
}
\arguments{
\item{settings}{Character path to yaml settings file or named, nested list.
Passed to \code{set_list} argument of \code{envFunc::name_env_out()}. If character, the
named, nested list will be \code{yaml::read_yaml(settings)}. Needs named elements
\code{extent} and \code{grain} somewhere in the list.}

\item{store_base}{Character. Path at which to create the store.}

\item{target_pattern}{Character. Regexp to find targets \link{'project files'}
(https://books.ropensci.org/targets/projects.html#project-files).}

\item{local}{Logical. If \code{local}, the project names is not included within
each tars element.}

\item{save_yaml}{Logical. Save \verb{_targets.yaml} from within \code{make_tars()}?}

\item{list_names}{Character string of names used to extract elements of
\code{settings} to include in the store structure. Defaults to \code{extent} and
\code{grain}.}
}
\value{
list of 'projects' each with elements 'script' and 'store'. Saves
_targets.yaml
}
\description{
Runs \code{targets::tar_source()}, creates and then reads _targets.yaml from any
files matching the pattern ``.
}
